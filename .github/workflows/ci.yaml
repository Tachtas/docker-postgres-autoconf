name: ci-arm64

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: 0 0 * * 0

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    env:
      PG_VERSION: "17"
      BASE_TAG: "17-alpine"  # âœ… gunakan alpine (multi-arch, valid)
      DOCKER_REPO: tecnativa/postgres-autoconf
      DOCKER_TAG: 17-arm64
      GIT_SHA1: ${{ github.sha }}
      IS_PR: ${{ github.event_name == 'pull_request' }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v6
      - run: pip install -r tests/ci-requirements.txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build Docker Image (ARM64)
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg BASE_TAG=${{ env.BASE_TAG }} \
            -t ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }} \
            --load \
            .

      - name: Run tests
        run: python -m unittest tests.test -v

      - name: Set Docker Tag
        run: |
          if [ "${{ env.IS_PR }}" = "true" ]; then
            echo "DOCKER_TAG=17-arm64-pr${{ github.event.number }}" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=17-arm64" >> $GITHUB_ENV
          fi

      - name: Push Docker Image to GitHub Registry
        if: github.repository == 'Tecnativa/docker-postgres-autoconf' && (env.IS_PR || github.ref == 'refs/heads/master')
        env:
          REGISTRY_HOST: ghcr.io
          REGISTRY_TOKEN: ${{ secrets.BOT_TOKEN }}
          REGISTRY_USERNAME: ${{ secrets.BOT_LOGIN }}
        run: |
          docker login ghcr.io -u "$REGISTRY_USERNAME" -p "$REGISTRY_TOKEN"
          docker buildx build \
            --platform linux/arm64 \
            --build-arg BASE_TAG=${{ env.BASE_TAG }} \
            -t ghcr.io/${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }} \
            --push .
